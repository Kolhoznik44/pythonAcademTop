"""
задача 1
представьте что у вас есть длинная клумба. На этой клумбе выложены разные цветы. Есть места под новые,
однако цветы не могут ужиться друг с другом если между ними нет расстояния хотя б в одно посадочное место
Вам передается строка из 0 и 1 где 0 - пустое место
1 - занятое место
Необходимо реализовать функцию которая вернет максимальное количество цветов которые можно посадить на эту клумбу при
условии что они буду посажены одной не разрывной клумбой
примеры :[1,0,1,0,1,0,0,0,1,0,0,0,1,0,1,0] ->2
        [1,0,1,0,1,0,0,0,1,0,1,0] ->1
        [0,0,0] ->2
        [1,0,1,0,1,0,0,0,0,0,1,0,1,0] ->2
        [0,0,1,1,0,0] ->2

"""
def max_flowers(flowerbed):
    count = 0
    size = len(flowerbed)

    for i in range(size):
        # Проверяем возможность посадки цветка
        if flowerbed[i] == 0:
            # Проверяем левого соседа (с учетом края)
            left_empty = (i == 0) or (flowerbed[i-1] == 0)

            # Проверяем правого соседа (с учетом края)
            right_empty = (i == size-1) or (flowerbed[i+1] == 0)

            # Если соседние места пустые, можно посадить цветок
            if left_empty and right_empty:
                flowerbed[i] = 1  # Сажаем цветок
                count += 1  # Увеличиваем счетчик

    return count

print(max_flowers([1,0,0,0,1]))  # 1
print(max_flowers([1,0,0,0,0,1]))  # 1
print(max_flowers([0,0,1,0,1]))  # 1
print(max_flowers([0,0,0,0,0]))  # 3
print(max_flowers([0,0,0]))  # 2